---
# tasks file for redis/roles/redis
  - name: INSTALL rpm
    dnf:
     name: https://rpms.remirepo.net/enterprise/remi-release-8.rpm
     disable_gpg_check: yes
     state: present

  - name: INSTALL redis 6
    shell: dnf module install redis:remi-6.2 -y
    #dnf:
    #  name: redis:6.2
    #  update_cache: true
    #  state: present
  
  - name: COPY redis-63791.conf.j2
    template: src=redis-{{ redis_port }}.conf.j2 dest=/etc/redis/redis-{{ redis_port }}.conf mode=0644
    register: redis_conf

  - name: FIND CURRENT REDIS MASTER NODE
    shell: find_master=$(/usr/bin/redis-cli -p {{ redis_port }} info replication|grep 'role:master' 2>/dev/null); if [[ -n "$find_master" ]]; then echo "{{ ansible_host }}"; else echo $(/usr/bin/redis-cli -p 63791 info replication|grep master_host|cut -d':' -f 2 2>/dev/null); fi;
    register: is_redis_master

  - set_fact:
      set_redis_master_ip: "{{ is_redis_master.stdout }}"
    run_once: yes
    when: inventory_hostname == play_hosts[0]
    #when: is_redis_master.stdout != ""

  - block:

     - name: ADD replicaof parameter for slaves
       lineinfile: dest=/etc/redis/redis-{{ redis_port }}.conf line='replicaof {{ set_redis_master_ip }} {{ redis_port }}' insertafter='EOF' state=present
       #delegate_to: "{{ item }}"
       #with_items: "{{ hosts_group }}"
       when: ansible_host != set_redis_master_ip

    when: set_redis_master_ip != ""
  - block:

     - name: set first_redis_master_ip
       set_fact: first_redis_master_ip="{{ ansible_default_ipv4.address }}"
       run_once: yes
       when: inventory_hostname == play_hosts[0]

     - name: ADD replicaof parameter for slaves
       lineinfile: dest=/etc/redis/redis-{{ redis_port }}.conf line='replicaof {{ first_redis_master_ip }} {{ redis_port }}' insertafter='EOF' state=present
       when: inventory_hostname != play_hosts[0]

    when: set_redis_master_ip == ""

  - name: RECONFIGURE systemd for redis-63791.conf with port 63791
    replace: path=/usr/lib/systemd/system/redis.service regexp='/etc/redis/redis.conf' replace='/etc/redis/redis-{{ redis_port }}.conf'
    register: redis_systemd1

  - name: RECONFIGURE systemd ADD parameters
    lineinfile:
      dest: /usr/lib/systemd/system/redis.service
      insertafter: '^ExecStop'
      line: "{{ item }}"
      state: present
    with_items:
      - TimeoutStopSec=0
      - Restart=always
    register: redis_systemd2

  - name: reload systemd
    shell: systemctl daemon-reload
    when: redis_systemd1.changed or redis_systemd2.changed

  - name: restart redis
    service: name=redis state=restarted enabled=yes
    when: redis_conf.changed
