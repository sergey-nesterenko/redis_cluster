---
# tasks file for redis/roles/sentinel
  - name: COPY sentinel-26391.conf.j2
    template: src=sentinel-{{ sentinel_port }}.conf.j2 dest=/etc/redis/sentinel-{{ sentinel_port }}.conf mode=0644
    register: sentinel_conf

  - name: COPY sentinel-26391.service.j2 TO systemd
    template: src=sentinel-{{ sentinel_port }}.service.j2 dest=/etc/systemd/system/sentinel-{{ sentinel_port }}.service mode=0644
    register: sentinel_service

  - name: FIND CURRENT REDIS MASTER NODE
    shell: find_master=$(/usr/bin/redis-cli -p {{ redis_port }} info replication|grep 'role:master' 2>/dev/null); if [[ -n "$find_master" ]]; then  echo "{{ ansible_host }}"; else echo "slave"; fi;
    register: is_redis_master

  - set_fact:
      set_redis_master_ip: "{{ is_redis_master.stdout }}"
    when: is_redis_master.stdout != "slave"

  - name: INSERT MASTER ROW INTO /etc/redis/sentinel-26391.conf
    lineinfile:
      dest: /etc/redis/sentinel-{{ sentinel_port }}.conf
       #insertafter: '^sentinel deny-scripts-reconfig yes'
      regexp: '^sentinel monitor master_{{ redis_port }}'
      line: 'sentinel monitor master_{{ redis_port }} {{ is_redis_master.stdout }} {{ redis_port }} 2'
      state: present
    delegate_to: "{{ item }}"
    with_items: "{{ play_hosts }}"
    #run_once: yes
    when: is_redis_master.stdout != "slave"

  - name: CHOWN REDIS /var/log/redis /etc/redis
     #shell: chown -R redis:redis /var/log/redis
    file:
     path: "{{ item }}"
     state: directory
     recurse: yes
     owner: redis
    with_items:
      - /var/log/redis
      - /etc/redis

  - name: START SENTINEL systemd
    shell: systemctl daemon-reload
    when: sentinel_service.changed

  - name: START SENTINEL
    #shell: /usr/bin/redis-server /etc/redis/sentinel-{{ sentinel_port }}.conf --sentinel
    service: name=sentinel-{{ sentinel_port }} state=restarted enabled=yes
    when: sentinel_conf.changed or sentinel_service.changed
